#include <stdio.h>
#include <string.h>

int leerEntrada(void);

int
main()
{
if(leerEntrada())
    printf("\nNo hay errores.\n");
else
    printf("\nHay algun error.\n");
return 0;
}

// Si vamos a esperar que salga de leerEntrada() un numero que me diga a que funcion llamar
// el valor del charAnterior es el que nos dice la direccion del movimiento.
// Pero si el estado sale con UNDO por ejemplo, ignoramos el valor de charAnterior!!!

int
leerEntrada()
{
enum estado {INICIO=1, MOVIMIENTO, UNDO, SAVE, QUIT, ERROR};

char turno, c;
char * charAnterior;
char * quit="it";
char * save="ve";
char * undo="do";
int i, flagSalida=0, estado=INICIO, noHayError=1;

while(flagSalida==0 && (turno=getchar()) && noHayError) {

	switch(estado){

		case INICIO: {
				if(turno=='w' || turno=='a' || turno=='d') {
					charAnterior=turno;
					estado=MOVIMIENTO;
				} else if(turno=='u')
					estado=UNDO;
				else if(turno=='s') {
                    charAnterior=turno;
					estado=SAVE;
				} else if(turno=='q')
					estado=QUIT;
				else if(turno=='\n')
                    ;
                else
					estado=ERROR;
				break;
		}

		case MOVIMIENTO: {
				if(turno=='\n')	{
					printf("Hice un movimiento\n");
                    flagSalida=1;
				}
				else
					estado=ERROR;
				break;
		}

		case UNDO: {
				if(turno=='n') {
                    i=1;
                    while(getchar() != '\n') {
                        printf("%c", undo[i]);
                        while((getchar()) == undo[i])
                            i++;

                    }
// HACE UN IF QUE VERIFIQUE SI ESTAS ENTRANDO A TODO EL STRING Y SINO QUE TE DE FALSO.
					if(i==3)
                        printf("Hice un undo\n");
                    else
                        estado=ERROR;
					flagSalida=1;
				}
				else
					estado=ERROR;
				break;
		}

		case SAVE: {
				if(turno=='\n')	{
					printf("Hice un movimiento\n");
					estado=MOVIMIENTO;
                    flagSalida=1;
				} else if(turno=='a') {
				    putchar('s');
				    i=0;
                    while(getchar() != '\n')
                        while((getchar()) == save[i++])
                            ;

/*				if('a') {
                    printf("La partida ha sido guardada.\n");
                    while(getchar() != '\n');
                    estado=INICIO;
*/
				} else
					estado=ERROR;
				break;
		}

		case QUIT: {

                if(turno=='u') {
                    i=0;
                    while(getchar() != '\n')
                        while((getchar()) == quit[i++])
                            ;
                    printf("Desea guardar antes de salir? (y/n)\n");
                    c=getchar();
                    if(c=='y') {
                        if(getchar() == '\n') {
                            printf("Se ha guardado la partida.\n");
                            flagSalida=1;
                        } else
                            estado=ERROR;
                    } else if(c=='n') {
                        if(getchar() == '\n') {
                            printf("No se ha guardado la partida.\n");
                            flagSalida=1;
                        } else
                            estado=ERROR;
                    } else
                        estado=ERROR;
                } else
                    estado=ERROR;
                break;
		}

		case ERROR: {
				printf("Se ha producido un error.\n");
				flagSalida=1;
                noHayError=0;
				break;
		}
	}

}
printf("\nEl estado es %d\n", estado);
printf("\nEl puntero charAnterior sale con valor: %c\n", charAnterior);

return noHayError;
}
